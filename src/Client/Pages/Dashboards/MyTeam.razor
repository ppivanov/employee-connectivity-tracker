@page "/my-team"
@inherits MyTeamDashboardClass

@using BlazorDateRangePicker
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]

<AuthorizeView>
    <Authorized>
        <div>

            @if (Initialized == false)
            {
                <Loading />
            }
            else if (IsLeader == false)
            {
                <NoAccess />
            }
            else
            {
                <div class="dashboard">
                    <div class="top-row float-left">
                        <div class="date-range float-left">
                            <DateRangePicker @bind-StartDate="FromDate" @bind-EndDate="ToDate">
                                <ButtonsTemplate Context="pickerContext">
                                    <button class="cancelBtn btn btn-sm btn-default"
                                            @onclick="@pickerContext.ClickCancel" type="button">
                                        Cancel
                                    </button>
                                    <button class="cancelBtn btn btn-sm btn-default"
                                            @onclick="@(e => ResetClick(e, pickerContext))" type="button">
                                        Reset
                                    </button>
                                    <button class="applyBtn btn btn-sm btn-primary" @onclick="@(e => CustomApply(e, pickerContext))"
                                            disabled="@(pickerContext.TStartDate == null || pickerContext.TEndDate == null)"
                                            type="button">
                                        Apply
                                    </button>
                                </ButtonsTemplate>
                            </DateRangePicker>
                        </div>
                        <DashboardSummaryStats 
                            EmailsSentCount="EmailsSent"
                            EmailsReceivedCount="EmailsReceived"
                            NumberOfMeetings="NumberOfMeetings"
                            FormattedTimeInMeeting="@FormattedTimeInMeeting" />
                    </div>
                    <div class="top-collaborators float-left">
                        <h2>Activity distribution</h2>
                        <div class="collaborators-list">
                            <div class="collaborator">
                                @foreach (var user in Collaborators)
                                {
                                    <p>@user.Key (@Math.Round(user.Value, 2)%)</p> <button @onclick="() => RedirectToDasboard(user.Key)">View</button>
                                }
                            </div>
                        </div>
                        <div class="points-threshold">
                            @if (IsSubmitting)
                            {
                                <p>Submitting, please wait.</p>
                            }
                            else
                            {
                                @if (CurrentNotificationOptions == null)
                                {
                                    <p>Loading current points threshold for notifications...</p>
                                }
                                else if (CurrentNotificationOptions.PointsThreshold == -1)
                                {
                                    <p>There was an error fetching current notifications threshold.</p>
                                }
                                else
                                {
                                    <p>Current threshold for notifications: @CurrentNotificationOptions.PointsThreshold</p>
                                    <p>Current margin for notifications: @CurrentNotificationOptions.MarginForNotification%</p>
                                    <p>Addtional users to notify:</p>
                                    <table>
                                        @foreach (var email in CurrentNotificationOptions.UsersToNotify)
                                        {
                                            <tr>
                                                <td>
                                                    <p>@email</p>
                                                </td>
                                            </tr>
                                        }
                                    </table>
                                }
                            }
                        </div>
                    </div>
                    <div class="emails-chart-container float-left">
                        <div id="emails-chart"></div>
                    </div>
                    <div class="events-chart-container float-left">
                        <div id="events-chart"></div>
                    </div>
                </div>
            }
        </div>
    </Authorized>
</AuthorizeView>


@code {

}
