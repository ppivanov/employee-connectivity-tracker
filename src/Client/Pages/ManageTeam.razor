@page "/manage-team"

@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using System.Net.Http.Headers
@attribute [Authorize]
@inject HttpClient Http
@inject IAccessTokenProvider TokenProvider
@inject IJSRuntime jsRuntime
@inject IControllerConnection graphProvider

<AuthorizeView>
    <Authorized>
        @*TODO - Add extra validations to ensure user is admin*@
        <h3>Manage Team</h3>
        
    </Authorized>
</AuthorizeView>
@code {
    List<string> selectedMembers;
    List<string> membersFromApi;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        membersFromApi = new List<string>()
        {
            "Alice",
            "Bob",
            "Trudy"
        };
    }

    protected async Task GetUserEmails()
    {
        var tokenResult = await TokenProvider.RequestAccessToken(
            new AccessTokenRequestOptions
            {
                Scopes = new[] { "api://5f468f03-5a1f-4571-9e1e-9606014e5728/API.Access" }
            });
        if (tokenResult.TryGetToken(out var token))
        {
            try
            {
                Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token.Value);
                var response = await Http.GetFromJsonAsync<List<string>>($"api/users");
            }
            catch (AccessTokenNotAvailableException exception)
            {
                exception.Redirect();
            }
        }
    }
}
