@inject IControllerConnection ApiConn
@inject DashboardState DashboardState
@inject HttpClient Http
@inject NavigationManager NavManager

<div class="expand-nav center-flex" onclick="openNav()"><i class="fas fa-angle-double-right"></i></div>
<nav id="mySidenav" class="sidenav">
    <a href="javascript:void(0)" class="closebtn" onclick="closeNav()">&times;</a>
    <a href="javascript:void(0)" @onclick="() => RedirectTo(homeRoute)" class="menu-option bottom-border">Home</a>
    <a href="javascript:void(0)" @onclick="() => RedirectTo(dashboardRoute)" class="menu-option bottom-border">Dashboard</a>
    @if (IsLeader)
    {
        <a href="javascript:void(0)" @onclick="() => RedirectTo(myTeamRoute)" class="menu-option bottom-border">My Team</a>
        <a href="javascript:void(0)" @onclick="() => RedirectTo(manageTeamRoute)" class="menu-option bottom-border">Manage Team</a>
    }
    @if (IsAdmin)
    {
        <a href="javascript:void(0)" @onclick="() => RedirectTo(createTeamRoute)" class="menu-option">Create Team</a>
        <a href="javascript:void(0)" @onclick="() => RedirectTo(viewTeamsRoute)" class="menu-option">View Teams</a>
        <a href="javascript:void(0)" @onclick="() => RedirectTo(moveMembersRoute)" class="menu-option">Move Members</a>
        <a href="javascript:void(0)" @onclick="() => RedirectTo(manageMediumsRoute)" class="menu-option">Manage Mediums</a>
    }
</nav>

@code{
    [Parameter]
    public bool IsAdmin { get; set; }
    [Parameter]
    public bool IsLeader { get; set; }

    private string homeRoute = "/";
    private string dashboardRoute = "/dashboard";
    private string myTeamRoute = "/my-team";
    private string manageTeamRoute => $"/manage-team/{hashedTeamId}";
    private string createTeamRoute = "/create-team";
    private string viewTeamsRoute = "/view-teams";
    private string moveMembersRoute = "/move-members";
    private string manageMediumsRoute = "/comm-points";

    private string hashedTeamId = string.Empty;

    protected override async Task OnParametersSetAsync()
    {
        if (IsLeader)
        {
            hashedTeamId = await ApiConn.GetHashedTeamId();
        }
    }

    protected void RedirectTo(string route)
    {
        DashboardState.SetIsDrillDown(false);
        NavManager.NavigateTo(route);
    }
}