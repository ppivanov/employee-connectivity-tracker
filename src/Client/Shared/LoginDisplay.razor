@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

    <div class="login-logout-section center-flex">
        <AuthorizeView>
            <Authorized>
                <div class="logout-display unselectable">
                    <p onclick="toggleUserDropdown()">
                        @context.User.GetUserEmail()
                        <i class="arrow down"></i>
                    </p>
                    <div id="dropdown" class="display-none">
                        @for (int i = 0; i < GetSplitUserDisplayName(context).Length; i++)
                        {
                            <div class="header-username">
                                @GetSplitUserDisplayName(context)[i]
                            </div>
                            @if (i != GetSplitUserDisplayName(context).Length - 1)
                            {
                                <hr />
                            }
                        }
                        <button class="logout-button" @onclick="BeginLogout">
                            Log
                            out
                        </button>
                    </div>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="login-display">
                    <button class="login-button" @onclick="BeginLogin">
                        Log
                        in
                    </button>
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </div>

    @code{
        private async Task BeginLogout(MouseEventArgs args)
        {
            await SignOutManager.SetSignOutState();
            Navigation.NavigateTo("authentication/logout");
        }

        private void BeginLogin()
        {
            Navigation.NavigateTo("authentication/login");
        }

        private string[] GetSplitUserDisplayName(AuthenticationState context)
        {
            var splitDisplayName = context.User.GetUserDisplayName().Split(" ");

            return splitDisplayName;
        }
    }


